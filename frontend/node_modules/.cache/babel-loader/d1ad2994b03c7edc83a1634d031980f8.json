{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\OneDrive\\\\Pictures\\\\Expense-Tracker-master\\\\frontend\\\\src\\\\Components\\\\C.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport * as agCharts from 'ag-charts-community';\nimport { AgChartsReact } from 'ag-charts-react';\nimport axios from 'axios';\nexport default class C extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      r: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8080/expenses', {\n      headers: {\n        \"Authorization\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(response => {\n      this.setState({\n        result: response.data\n      });\n      const map1 = new Map();\n\n      for (let i = 0; i < this.state.result.size(); i++) {\n        map1[this.state.result[i].category] += this.state.result[i].cost;\n      }\n\n      this.setState({\n        r: map1\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AgChartsReact, {\n      options: {\n        data: [{\n          label: 'Android',\n          value: 56.9\n        }, {\n          label: 'iOS',\n          value: 22.5\n        }, {\n          label: 'BlackBerry',\n          value: 6.8\n        }, {\n          label: 'Symbian',\n          value: 8.5\n        }, {\n          label: 'Bada',\n          value: 2.6\n        }, {\n          label: 'Windows',\n          value: 1.9\n        }],\n        series: [{\n          type: 'pie',\n          angleKey: 'value',\n          calloutLabelKey: 'label',\n          sectorLabelKey: 'value',\n          sectorLabel: {\n            color: 'white',\n            fontWeight: 'bold'\n          }\n        }]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kesha/OneDrive/Pictures/Expense-Tracker-master/frontend/src/Components/C.js"],"names":["React","Component","render","agCharts","AgChartsReact","axios","C","constructor","props","state","result","r","componentDidMount","get","headers","localStorage","getItem","then","response","setState","data","map1","Map","i","size","category","cost","label","value","series","type","angleKey","calloutLabelKey","sectorLabelKey","sectorLabel","color","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,CAAN,SAAgBL,SAAhB,CAA0B;AACvCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEjB,UAAMA,KAAN;AAMA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,CAAC,EAAC;AAFS,KAAb;AAID;;AAIDC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,gCAAV,EAA2C;AAAEC,MAAAA,OAAO,EAAE;AAAE,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAAnB;AAAX,KAA3C,EACDC,IADC,CACKC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAEQ,QAAQ,CAACE;AADL,OAAd;AAIF,YAAMC,IAAI,GAAG,IAAIC,GAAJ,EAAb;;AACE,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,IAAlB,EAAf,EAAwCD,CAAC,EAAzC,EACA;AACEF,QAAAA,IAAI,CAAC,KAAKZ,KAAL,CAAWC,MAAX,CAAkBa,CAAlB,EAAqBE,QAAtB,CAAJ,IAAqC,KAAKhB,KAAL,CAAWC,MAAX,CAAkBa,CAAlB,EAAqBG,IAA1D;AACD;;AAEF,WAAKP,QAAL,CAAc;AACbR,QAAAA,CAAC,EAACU;AADW,OAAd;AAGF,KAfC;AAeC;;AAKHnB,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE;AAC7BkB,QAAAA,IAAI,EAAE,CACJ;AAAEO,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SADI,EAEJ;AAAED,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAFI,EAGJ;AAAED,UAAAA,KAAK,EAAE,YAAT;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAHI,EAIJ;AAAED,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SAJI,EAKJ;AAAED,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SALI,EAMJ;AAAED,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SANI,CADuB;AAS7BC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,KADR;AAEEC,UAAAA,QAAQ,EAAE,OAFZ;AAGEC,UAAAA,eAAe,EAAE,OAHnB;AAIEC,UAAAA,cAAc,EAAE,OAJlB;AAKEC,UAAAA,WAAW,EAAE;AACXC,YAAAA,KAAK,EAAE,OADI;AAEXC,YAAAA,UAAU,EAAE;AAFD;AALf,SADM;AATqB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAsBD;;AA7DsC","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport * as agCharts from 'ag-charts-community';\r\nimport { AgChartsReact } from 'ag-charts-react';\r\nimport axios from 'axios';\r\n\r\nexport default class C extends Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    \r\n\r\n\r\n   \r\n\r\n    this.state = {\r\n      result: [],\r\n      r:[],\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:8080/expenses',{ headers: { \"Authorization\": localStorage.getItem(\"jwtToken\")}})\r\n\t\t.then((response) => {\r\n      this.setState({\r\n        result: response.data\r\n    });\r\n\r\n    const map1 = new Map();\r\n      for( let i=0;i<this.state.result.size();i++)\r\n      {\r\n        map1[this.state.result[i].category]+=this.state.result[i].cost;\r\n      }\r\n\r\n     this.setState({\r\n      r:map1\r\n     });\r\n  })}\r\n\r\n\r\n   \r\n\r\n  render() {\r\n    return <AgChartsReact options={{\r\n      data: [\r\n        { label: 'Android', value: 56.9 },\r\n        { label: 'iOS', value: 22.5 },\r\n        { label: 'BlackBerry', value: 6.8 },\r\n        { label: 'Symbian', value: 8.5 },\r\n        { label: 'Bada', value: 2.6 },\r\n        { label: 'Windows', value: 1.9 },\r\n      ],\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          angleKey: 'value',\r\n          calloutLabelKey: 'label',\r\n          sectorLabelKey: 'value',\r\n          sectorLabel: {\r\n            color: 'white',\r\n            fontWeight: 'bold',\r\n          },\r\n        },\r\n      ],\r\n    }} />;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}