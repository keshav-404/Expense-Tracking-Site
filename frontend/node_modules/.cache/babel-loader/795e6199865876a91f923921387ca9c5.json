{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\OneDrive\\\\Pictures\\\\Expense-Tracker-master\\\\frontend\\\\src\\\\Components\\\\C.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport * as agCharts from 'ag-charts-community';\nimport { AgChartsReact } from 'ag-charts-react';\nimport axios from 'axios';\nexport default class C extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      r: [],\n      options: {\n        data: getData(),\n        series: [{\n          type: 'pie',\n          angleKey: 'value',\n          calloutLabelKey: 'label',\n          sectorLabelKey: 'value',\n          sectorLabel: {\n            color: 'white',\n            fontWeight: 'bold'\n          }\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8080/expenses', {\n      headers: {\n        \"Authorization\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(response => {\n      this.setState({\n        result: response.data\n      });\n      const map1 = new Map();\n\n      for (let i = 0; i < this.state.result.size(); i++) {\n        map1[this.state.result[i].category] += this.state.result[i].cost;\n      }\n\n      this.setState({\n        r: map1\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AgChartsReact, {\n      options: this.state.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kesha/OneDrive/Pictures/Expense-Tracker-master/frontend/src/Components/C.js"],"names":["React","Component","render","agCharts","AgChartsReact","axios","C","constructor","props","state","result","r","options","data","getData","series","type","angleKey","calloutLabelKey","sectorLabelKey","sectorLabel","color","fontWeight","componentDidMount","get","headers","localStorage","getItem","then","response","setState","map1","Map","i","size","category","cost"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,CAAN,SAAgBL,SAAhB,CAA0B;AACvCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEjB,UAAMA,KAAN;AAMA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,CAAC,EAAC,EAFS;AAGXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEC,OAAO,EADN;AAEPC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,KADR;AAEEC,UAAAA,QAAQ,EAAE,OAFZ;AAGEC,UAAAA,eAAe,EAAE,OAHnB;AAIEC,UAAAA,cAAc,EAAE,OAJlB;AAKEC,UAAAA,WAAW,EAAE;AACXC,YAAAA,KAAK,EAAE,OADI;AAEXC,YAAAA,UAAU,EAAE;AAFD;AALf,SADM;AAFD;AAHE,KAAb;AAmBD;;AAKDC,EAAAA,iBAAiB,GAAG;AAClBlB,IAAAA,KAAK,CAACmB,GAAN,CAAU,gCAAV,EAA2C;AAAEC,MAAAA,OAAO,EAAE;AAAE,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAAnB;AAAX,KAA3C,EACDC,IADC,CACKC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AACZpB,QAAAA,MAAM,EAAEmB,QAAQ,CAAChB;AADL,OAAd;AAIF,YAAMkB,IAAI,GAAG,IAAIC,GAAJ,EAAb;;AACE,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,KAAKxB,KAAL,CAAWC,MAAX,CAAkBwB,IAAlB,EAAf,EAAwCD,CAAC,EAAzC,EACA;AACEF,QAAAA,IAAI,CAAC,KAAKtB,KAAL,CAAWC,MAAX,CAAkBuB,CAAlB,EAAqBE,QAAtB,CAAJ,IAAqC,KAAK1B,KAAL,CAAWC,MAAX,CAAkBuB,CAAlB,EAAqBG,IAA1D;AACD;;AAEF,WAAKN,QAAL,CAAc;AACbnB,QAAAA,CAAC,EAACoB;AADW,OAAd;AAGF,KAfC;AAeC;;AAKH7B,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWG,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAxDsC","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport * as agCharts from 'ag-charts-community';\r\nimport { AgChartsReact } from 'ag-charts-react';\r\nimport axios from 'axios';\r\n\r\nexport default class C extends Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    \r\n\r\n\r\n   \r\n\r\n    this.state = {\r\n      result: [],\r\n      r:[],\r\n      options: {\r\n        data: getData(),\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            angleKey: 'value',\r\n            calloutLabelKey: 'label',\r\n            sectorLabelKey: 'value',\r\n            sectorLabel: {\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  getD\r\n  \r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:8080/expenses',{ headers: { \"Authorization\": localStorage.getItem(\"jwtToken\")}})\r\n\t\t.then((response) => {\r\n      this.setState({\r\n        result: response.data\r\n    });\r\n\r\n    const map1 = new Map();\r\n      for( let i=0;i<this.state.result.size();i++)\r\n      {\r\n        map1[this.state.result[i].category]+=this.state.result[i].cost;\r\n      }\r\n\r\n     this.setState({\r\n      r:map1\r\n     });\r\n  })}\r\n\r\n\r\n   \r\n\r\n  render() {\r\n    return <AgChartsReact options={this.state.options} />;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}