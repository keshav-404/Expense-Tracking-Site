{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\OneDrive\\\\Pictures\\\\Expense-Tracker-master\\\\frontend\\\\src\\\\Components\\\\User\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport NavBar from \"../NavBar\";\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, Alert } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignInAlt, faEnvelope, faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\n\nconst Login = props => {\n  const [error, setError] = useState();\n  const [show, setShow] = useState(true);\n  const initialState = {\n    email: \"\",\n    password: \"\"\n  };\n  const [user, setUser] = useState(initialState);\n\n  const credentialChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(user);\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const AUTH_URL = \"http://localhost:8080/user/authenticate\";\n\n  const authenticateUser = async () => {\n    console.log(user); // console.log(password);\n\n    try {\n      const response = await axios.post(AUTH_URL, user);\n      localStorage.setItem(\"jwtToken\", response.data.token);\n      props.history.push(\"/home\");\n    } catch (error) {\n      resetLoginForm();\n      setError(\"Invalid email and password\");\n      console.log(error);\n    }\n  };\n\n  const logoutUser = () => {\n    return dispatch => {\n      dispatch(logoutRequest());\n      localStorage.removeItem(\"jwtToken\");\n      dispatch(success({\n        username: \"\",\n        isLoggedIn: false\n      }));\n    };\n  };\n\n  const loginRequest = () => {\n    return {\n      type: LOGIN_REQUEST\n    };\n  };\n\n  const logoutRequest = () => {\n    return {\n      type: LOGOUT_REQUEST\n    };\n  };\n\n  const success = isLoggedIn => {\n    return {\n      type: SUCCESS,\n      payload: isLoggedIn\n    };\n  };\n\n  const failure = () => {\n    return {\n      type: FAILURE,\n      payload: false\n    };\n  };\n\n  const dispatch = useDispatch(); //   const validateUser = () => {\n  //     dispatch(authenticateUser(user.email, user.password))\n  //       .then((response) => {\n  //         console.log(response.data);\n  //         return props.history.push(\"/home\");\n  //       })\n  //       .catch((error) => {\n  //         console.log(error.message);\n  //         setShow(true);\n  //         resetLoginForm();\n  //         setError(\"Invalid email and password\");\n  //       });\n  //   };\n\n  const resetLoginForm = () => {\n    setUser(initialState);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, show && props.message && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    onClose: () => setShow(false),\n    dismissible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, props.message), show && error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    onClose: () => setShow(false),\n    dismissible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, error), /*#__PURE__*/React.createElement(Card, {\n    className: \"border border-dark bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSignInAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), \" Login\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEnvelope,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"email\",\n    value: user.email,\n    onChange: credentialChange,\n    className: \"bg-dark text-white\",\n    placeholder: \"Enter Email Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    autoComplete: \"off\",\n    type: \"password\",\n    name: \"password\",\n    value: user.password,\n    onChange: credentialChange,\n    className: \"bg-dark text-white\",\n    placeholder: \"Enter Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Card.Footer, {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    type: \"button\",\n    variant: \"success\",\n    onClick: authenticateUser,\n    disabled: user.email.length === 0 || user.password.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSignInAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }), \" Login\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    type: \"button\",\n    variant: \"info\",\n    onClick: resetLoginForm,\n    disabled: user.email.length === 0 && user.password.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUndo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }), \" Reset\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/kesha/OneDrive/Pictures/Expense-Tracker-master/frontend/src/Components/User/Login.js"],"names":["React","useState","useDispatch","axios","NavBar","Row","Col","Card","Form","InputGroup","FormControl","Button","Alert","FontAwesomeIcon","faSignInAlt","faEnvelope","faLock","faUndo","LOGIN_REQUEST","LOGOUT_REQUEST","SUCCESS","FAILURE","Login","props","error","setError","show","setShow","initialState","email","password","user","setUser","credentialChange","event","name","value","target","console","log","AUTH_URL","authenticateUser","response","post","localStorage","setItem","data","token","history","push","resetLoginForm","logoutUser","dispatch","logoutRequest","removeItem","success","username","isLoggedIn","loginRequest","type","payload","failure","message","textAlign","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport NavBar from \"../NavBar\";\r\n\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSignInAlt,\r\n  faEnvelope,\r\n  faLock,\r\n  faUndo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const SUCCESS = \"SUCCESS\";\r\nexport const FAILURE = \"FAILURE\";\r\nconst Login = (props) => {\r\n  const [error, setError] = useState();\r\n  const [show, setShow] = useState(true);\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [user, setUser] = useState(initialState);\r\n\r\n  const credentialChange = (event) => {\r\n    const { name, value } = event.target;\r\n    console.log(user);\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const AUTH_URL = \"http://localhost:8080/user/authenticate\";\r\n\r\n const authenticateUser = async () =>  {\r\n    console.log(user);\r\n    // console.log(password);\r\n  try {\r\n    const response = await axios.post(AUTH_URL, user);\r\n    localStorage.setItem(\"jwtToken\", response.data.token);\r\n    props.history.push(\"/home\");\r\n  } catch (error) {\r\n    resetLoginForm();\r\n    setError(\"Invalid email and password\");\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n const logoutUser = () => {\r\n  return (dispatch) => {\r\n    dispatch(logoutRequest());\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch(success({ username: \"\", isLoggedIn: false }));\r\n  };\r\n};\r\n\r\nconst loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst logoutRequest = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst success = (isLoggedIn) => {\r\n  return {\r\n    type: SUCCESS,\r\n    payload: isLoggedIn,\r\n  };\r\n};\r\n\r\nconst failure = () => {\r\n  return {\r\n    type: FAILURE,\r\n    payload: false,\r\n  };\r\n};\r\n\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n\r\n//   const validateUser = () => {\r\n//     dispatch(authenticateUser(user.email, user.password))\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         return props.history.push(\"/home\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.message);\r\n//         setShow(true);\r\n//         resetLoginForm();\r\n//         setError(\"Invalid email and password\");\r\n//       });\r\n//   };\r\n\r\n  const resetLoginForm = () => {\r\n    setUser(initialState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <NavBar/>\r\n    <br></br>\r\n    <br></br>\r\n    <br></br>\r\n    <br></br>\r\n   \r\n    <Row className=\"justify-content-md-center \">\r\n      <Col xs={5}>\r\n        {show && props.message && (\r\n          <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n            {props.message}\r\n          </Alert>\r\n        )}\r\n        {show && error && (\r\n          <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <Card className={\"border border-dark bg-dark text-white\"}>\r\n          <Card.Header>\r\n            <FontAwesomeIcon icon={faSignInAlt} /> Login\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <FontAwesomeIcon icon={faEnvelope} />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={user.email}\r\n                    onChange={credentialChange}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Email Address\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <FontAwesomeIcon icon={faLock} />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={user.password}\r\n                    onChange={credentialChange}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Password\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Card.Body>\r\n          <Card.Footer style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              size=\"sm\"\r\n              type=\"button\"\r\n              variant=\"success\"\r\n              onClick={authenticateUser}\r\n              disabled={user.email.length === 0 || user.password.length === 0}\r\n            >\r\n              <FontAwesomeIcon icon={faSignInAlt} /> Login\r\n            </Button>{\" \"}\r\n            <Button\r\n              size=\"sm\"\r\n              type=\"button\"\r\n              variant=\"info\"\r\n              onClick={resetLoginForm}\r\n              disabled={user.email.length === 0 && user.password.length === 0}\r\n            >\r\n              <FontAwesomeIcon icon={faUndo} /> Reset\r\n            </Button>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}